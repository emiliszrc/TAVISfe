@using TravelManagerFE.Data
@using BlazorTable
@using System.Collections.Generic
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components
@using TravelManagerFE.Data
@using System.Collections.Generic
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components
@using TravelManagerFE.Data
@using System.Collections.Generic
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components
@using TravelManagerFE.Data

@page "/destinationsearch"

<h3>Destination Search</h3>

@inject SearchService SearchService


<div>
    <input placeholder="location" @bind="query" />
    <button @onclick="SearchForDestinations">Search</button>
</div>
<div>

</div>
    @if (locations.Any())
    {
        @*<table>
            <tr>
                <th>Title</th>
                <th>Type</th>
                <th>Address</th>
            </tr>
            @foreach (var destination in locations)
            {
                <tr>
                    <td>@destination.Title</td>
                    <td>@destination.Type</td>
                    <td>@destination.Address</td>
                    <td>
                        <button @onclick="@(() => OnClick.InvokeAsync(destination))">Click me</button>
                    </td>
                </tr>
            }
        </table>*@
        <Table TableItem="Location" Items="locations" PageSize="15" RowClickAction="RowClick">
            <Column TableItem="Location" Title="Id" Field="@(x => x.Title)" Sortable="true" Filterable="true" Width="10%" />
            <Column TableItem="Location" Title="First Name" Field="@(x => x.Type)" Sortable="true" Filterable="true" Width="20%" />
            <Column TableItem="Location" Title="Last Name" Field="@(x => x.Address)" Sortable="true" Filterable="true" Width="20%" />
            <Pager ShowPageNumber="true" ShowTotalCount="true" />
        </Table>
    }

@code {
    private List<Location> locations = new List<Location>();

    private string query;

    private bool tripViewEnabled { get; set; }

    [Parameter]
    public EventCallback<Location> OnClick { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        tripViewEnabled = false;
    }

    private async Task SearchForDestinations()
    {
        locations = await SearchService.SearchForDestinations(query);
    }

    private void RowClick(Location location)
    {
        OnClick.InvokeAsync(location);
    }

    private void DisplayTrips() => tripViewEnabled = !tripViewEnabled;
}
