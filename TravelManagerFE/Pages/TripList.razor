@using TravelManagerFE.Data
@using Newtonsoft.Json
@using Blazored.SessionStorage

@page "/tripList"

<AuthorizeView>
    <Authorized>
        <div>
            <h3>Trip creation <MatButton @onclick="CreateTrip">Create new</MatButton> </h3>

        </div>

        <div>
            <MatTabGroup>
                @if (currentUser != null)
                {
                    <MatTab Label="Your trips">
                        @if (trips.Any())
                        {
                            <MatTable Items="trips" AllowSelection="true" SelectionChanged="GetDetails" ShowPaging="@(trips.Count > 5)">
                                <MatTableHeader>
                                    <th style="width:25%">Title</th>
                                    <th style="width:25%">Creator</th>
                                    <th style="width:25%">Organisation</th>
                                    <th style="width:25%">In review</th>
                                    <th></th>
                                </MatTableHeader>
                                <MatTableRow Context="ctx">
                                    <td>@ctx.Title</td>
                                    <td>@ctx.Creator.Name @ctx.Creator.Surname</td>
                                    <td>@ctx.Organisation?.Title</td>
                                    @if (ctx.TripStatus == TripStatus.InReview)
                                            {
                                        <td><MatIcon Icon="visibility"></MatIcon></td>
                                            }
                                            else
                                            {
                                        <td><MatIcon Icon="mode_edit_outline"></MatIcon></td>
                                            }
                                </MatTableRow>
                            </MatTable>
                        }
                        else
                        {
                            <p>No trips created by you</p>
                        }
                    </MatTab>
                    <MatTab Label="Organization trips">
                        @if (organisationTrips.Any())
                        {

                            <MatTable Items="organisationTrips" AllowSelection="true" SelectionChanged="GetDetails" ShowPaging="@(organisationTrips.Count > 5)">
                                <MatTableHeader>
                                    <th style="width:25%">Title</th>
                                    <th style="width:25%">Creator</th>
                                    <th style="width:25%">Organisation</th>
                                    <th style="width:25%">In review</th>
                                    <th></th>
                                </MatTableHeader>
                                <MatTableRow Context="ctx">
                                    <td>@ctx.Title</td>
                                    <td>@ctx.Creator.Name @ctx.Creator.Surname</td>
                                    <td>@ctx.Organisation?.Title</td>
                                    @if (ctx.TripStatus == TripStatus.InReview)
                                            {
                                        <td><MatIcon Icon="visibility"></MatIcon></td>
                                            }
                                            else
                                            {
                                        <td><MatIcon Icon="mode_edit_outline"></MatIcon></td>
                                            }
                                </MatTableRow>
                            </MatTable>
                        }
                        else
                        {
                            <p>No trips created by your organization members</p>
                        }
                    </MatTab>
                }
            </MatTabGroup>
        </div>
    </Authorized>
    <NotAuthorized>
        You are not welcome here!
    </NotAuthorized>
</AuthorizeView>

@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject NavigationManager NavigationManager
@inject TripService TripService
@inject ISessionStorageService sessionStorageService;

@code {
    private List<Trip> trips = new List<Trip>();
    private List<Trip> organisationTrips = new List<Trip>();
    private User currentUser = null;

    protected override async Task OnInitializedAsync()
    {
        var user = await sessionStorageService.GetItemAsync<string>("user");

        if (user != null)
        {
            currentUser = JsonConvert.DeserializeObject<User>(user);
        }

        await base.OnInitializedAsync();
        trips = TripService.GetUserTrips(currentUser.Id);

        organisationTrips = TripService.GetOrganisationTrips(currentUser.Id);
    }

    private void GetDetails(object o)
    {
        NavigationManager.NavigateTo($"tripdetails/{((Trip)o).Id}");
    }

    private void CreateTrip()
    {
        NavigationManager.NavigateTo($"tripcreation");
    }
}
