@using TravelManagerFE.Data
@using Newtonsoft.Json

@page "/tripList"

<AuthorizeView>
    <Authorized>
        <div>
            <h3>Trip List</h3>
            <button @onclick="CreateTrip">Create new</button>
        </div>

        @inject NavigationManager NavigationManager
        @inject TripService TripService

        <div>
            @if (trips.Any())
            {
                
                @if (currentUser != null)
                {
                    <table>
                        <tr>
                            <th>Title</th>
                            <th>Type</th>
                            <th>Cost</th>
                            <th></th>
                        </tr>
                        @foreach (var trip in trips.Where(t => t.Creator.Id == currentUser.Id))
                        {
                            <tr class="trip-table-row">
                                <td>@trip.Title</td>
                                <td>@trip.Type</td>
                                <td>@trip.Cost</td>
                                <td><button @onclick="@(() => GetDetails(trip))">Details</button></td>
                            </tr>
                        }
                    </table>

                    @*<b>Organisation trips</b>
                    <table>
                        @foreach (var trip in trips.Where(t => t.Creator.Id != currentUser.Id))
                        {
                            <tr class="trip-table-row">
                                <td>@trip.Title</td>
                                <td>@trip.Type</td>
                                <td>@trip.Cost</td>
                                <td><button @onclick="@(() => GetDetails(trip))">Details</button></td>
                            </tr>
                        }
                    </table>*@
                }
            }
        </div>
    </Authorized>
    <NotAuthorized>
        You are not welcome here!
    </NotAuthorized>
</AuthorizeView>

@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage

@code {
    private List<Trip> trips = new List<Trip>();
    private User currentUser;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        trips = TripService.GetTrips();

        var user = await SessionStorage.GetItemAsync<string>("user");
        currentUser = JsonConvert.DeserializeObject<User>(user);
    }

    private void GetDetails(Trip trip)
    {
        NavigationManager.NavigateTo($"tripdetails/{trip.Id}");
    }

    private void CreateTrip()
    {
        NavigationManager.NavigateTo($"tripcreation");
    }
}
