
@using TravelManagerFE.Data

@page "/"
    <div class="fill">
        <div class="limiter">
            <div class="wrap-login">
                <span class="login-title">
                    <div>
                        <b>Login</b>
                    </div>
                </span>
                <div class="login-input-field">
                    <input class="login-input" placeholder="username" @bind="username"/>
                </div>
                <div class="login-input-field">
                    <input class="login-input" placeholder="password" @bind="password"/>
                </div>
                <div class="login-button-wrap">
                    <div>
                        <button @onclick="LoginUser">Login</button>
                    </div>
                </div>

                <div class="login-signup">
                    <a @onclick="SignupNew">Would You like to Sign Up?</a>
                </div>
            </div>
        </div>
    </div>

    @inject UserService UserService
    @inject AuthenticationStateProvider AuthenticationStateProvider;
    @inject NavigationManager NavigationManager;
    @inject Blazored.SessionStorage.ISessionStorageService SessionStorage

    @code {
        private string username;
        private string password;

        public async Task LoginUser()
        {
            var currentUser = await UserService.Login(username, password);
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(username);
            NavigationManager.NavigateTo("/tripList");

            await SessionStorage.SetItemAsync("username", username);
        }

        public void SignupNew()
        {
            NavigationManager.NavigateTo("/signup");
        }
    }
